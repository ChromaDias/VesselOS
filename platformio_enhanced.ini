; SIGPRINT Enhanced PlatformIO Configuration
; ==========================================
; Binary Protocol + WiFi + Multi-Band Processing

[platformio]
default_envs = esp32s3_enhanced
src_dir = .
include_dir = include

; ============================================================================
; ESP32-S3 Enhanced Configuration
; ============================================================================

[env:esp32s3_enhanced]
platform = espressif32@6.4.0
board = esp32-s3-devkitc-1
framework = arduino
board_build.flash_mode = qio
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.arduino.memory_type = qio_opi

; Limit compilation to the enhanced firmware entry point
src_filter = 
    +<main_enhanced.cpp>

; Serial Configuration for Binary Protocol
monitor_speed = 921600
monitor_filters = 
    direct
    esp32_exception_decoder

; Build flags for optimization
build_flags = 
    -DCORE_DEBUG_LEVEL=1
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    
    ; Math optimizations for DSP
    -Ofast
    -ffast-math
    -funroll-loops
    -ftree-vectorize
    
    ; Multi-band processing
    -DNUM_FREQ_BANDS=5
    -DENABLE_BINARY_PROTOCOL
    -DENABLE_WIFI_STREAMING
    
    ; Memory allocation
    -DCONFIG_SPIRAM_USE_MALLOC=1
    -DCONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL=16384
    
    ; WiFi optimization
    -DCONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM=16
    -DCONFIG_ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM=32
    -DCONFIG_ESP32_WIFI_TX_BUFFER_TYPE=1
    -DCONFIG_ESP32_WIFI_AMPDU_TX_ENABLED=1
    -DCONFIG_ESP32_WIFI_AMPDU_RX_ENABLED=1

; Libraries
lib_deps = 
    ; Core libraries
    bblanchon/ArduinoJson@^6.21.3
    SPI
    Wire
    
    ; WiFi and Async Web Server
    ottowinter/ESPAsyncWebServer@^3.1.0
    ottowinter/AsyncTCP@^3.1.0
    
    ; DSP and Math
    https://github.com/kosme/arduinoFFT.git
    
    ; Optional: TensorFlow Lite for future ML
    ; tensorflow/tensorflow-lite-esp32@^1.0.0

; Partition scheme for OTA updates
board_build.partitions = default_16MB.csv

; Upload configuration
upload_speed = 921600
upload_port = /dev/ttyUSB0

; ============================================================================
; Debug Build (with verbose logging)
; ============================================================================

[env:esp32s3_debug]
extends = env:esp32s3_enhanced
build_type = debug
build_flags = 
    ${env:esp32s3_enhanced.build_flags}
    -DCORE_DEBUG_LEVEL=5
    -DDEBUG_ESP_WIFI
    -DDEBUG_ESP_PORT=Serial
    -DENABLE_DEBUG_LOGGING
    -DVERBOSE_SIGPRINT

monitor_filters = 
    esp32_exception_decoder
    colorize
    time

; ============================================================================
; Production Build (optimized for speed)
; ============================================================================

[env:esp32s3_production]
extends = env:esp32s3_enhanced
build_type = release
build_flags = 
    ${env:esp32s3_enhanced.build_flags}
    -DCORE_DEBUG_LEVEL=0
    -DNDEBUG
    -Os
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    
; Strip debug symbols for smaller binary
build_unflags = -g

; ============================================================================
; OTA-enabled Build
; ============================================================================

[env:esp32s3_ota]
extends = env:esp32s3_enhanced
build_flags = 
    ${env:esp32s3_enhanced.build_flags}
    -DENABLE_OTA_UPDATES
    
lib_deps = 
    ${env:esp32s3_enhanced.lib_deps}
    ottowinter/ArduinoOTA@^3.0.0

; OTA upload configuration
upload_protocol = espota
upload_port = 192.168.4.1
upload_flags = 
    --port=3232
    --auth=consciousness

; ============================================================================
; Test Build (for unit testing)
; ============================================================================

[env:native_test]
platform = native
test_framework = unity
build_flags = 
    -DUNIT_TEST
    -DMOCK_HARDWARE
    -DSIGPRINT_USE_MOCK=1
    -std=c++17

lib_deps = 
    throwtheswitch/Unity@^2.5.2

; ============================================================================
; Custom Targets
; ============================================================================

; ============================================================================
; Global Settings
; ============================================================================

[common]
; Shared definitions
lib_ldf_mode = deep+
lib_compat_mode = strict

; Code quality
check_tool = cppcheck
check_flags = 
    --enable=all
    --std=c++14
    --suppress=missingIncludeSystem
