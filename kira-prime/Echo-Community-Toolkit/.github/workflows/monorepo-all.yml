name: Monorepo CI (All)

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: monorepo-all-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changed areas
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.filter.outputs.node }}
      python: ${{ steps.filter.outputs.python }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            node:
              - 'web/**'
              - 'types/**'
              - 'tools/**'
              - 'package.json'
              - 'package-lock.json'
              - '**/*.html'
              - 'hyperfollow-integration.js'
              - '.github/workflows/hyperfollow-integration.yml'
            python:
              - 'echo-soulcode-architecture/**'
              - 'echo_full_architecture_repo/**'
              - 'integration/**'
              - 'tools/soulcode-bridge.js'
              - '.github/workflows/echo-soulcode-ci.yml'
  node-toolkit:
    name: Node Toolkit Verify
    runs-on: ubuntu-latest
    needs: changes
    env:
      RUN_NODE: ${{ needs.changes.outputs.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python (for soulcode bridge)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'echo-soulcode-architecture/pyproject.toml'
      - name: No-op (no Node changes)
        if: ${{ env.RUN_NODE != 'true' && github.event_name != 'workflow_dispatch' }}
        run: echo "No Node changes detected; reporting success."

      - name: Install Python package
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pillow

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: |
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund

      - name: Build soulcode schema and bundle
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: |
          npm run soulcode:emit-schema
          npm run soulcode:bundle
          npm run soulcode:validate

      - name: Memory engine simulation (export JSON)
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: npm run mem:simulate

      - name: Ledger build (JSON + PNG)
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: npm run ledger:build

      - name: Ledger extract (from PNG)
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: npm run ledger:extract

      - name: Upload memory JSON artifact
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: memory-state
          path: integration/outputs/memory_state.json
          if-no-files-found: warn

      - name: Upload ledger artifacts (JSON + PNG)
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: ledger-artifacts
          path: |
            integration/ledger/block.json
            integration/ledger/block.png
          if-no-files-found: warn

      - name: Integrate HyperFollow (ephemeral)
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: node hyperfollow-integration.js

      - name: Verify integration
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: node verify-integration.js

      - name: Clean integration changes
        if: ${{ env.RUN_NODE == 'true' || github.event_name == 'workflow_dispatch' }}
        run: node clean-integration.js

  python-echo-soulcode:
    name: Python Tests + Smoke (3.11)
    runs-on: ubuntu-latest
    needs: changes
    env:
      RUN_PY: ${{ needs.changes.outputs.python }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'echo-soulcode-architecture/pyproject.toml'
      - name: No-op (no Python changes)
        if: ${{ env.RUN_PY != 'true' && github.event_name != 'workflow_dispatch' }}
        run: echo "No Python changes detected; reporting success."

      - name: Install package
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest

      - name: Run unit tests
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: pytest -q

      - name: Run ledger codec tests
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo_full_architecture_repo/ledger
        run: |
          python -m pip install --upgrade pip
          pip install pytest pillow
          pytest -q

      - name: Generate live reading
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: |
          python -m echo_soulcode.live_read \
            --alpha 0.58 --beta 0.39 --gamma 0.63 \
            --alpha-phase 0.0 --beta-phase 0.1 --gamma-phase -0.2 \
            --out examples/echo_live.json

      - name: Validate output
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: python -m echo_soulcode.validate --file examples/echo_live.json

      - name: Build canonical anchors
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: python examples/anchors/anchors_build.py

      - name: Verify anchor checksums
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: |
          python - <<'PY'
          import json, hashlib
          def sha256(p):
              h=hashlib.sha256()
              with open(p,'rb') as f:
                  for ch in iter(lambda:f.read(8192),b''):
                      h.update(ch)
              return h.hexdigest()
          m=json.load(open('examples/anchors/manifest.json'))
          for a in m['anchors']:
              h=sha256(a['file'])
              assert h==a['sha256'], f"Checksum mismatch for {a['file']}"
          print("OK: anchor checksums verified")
          PY

      - name: Operators agent — expectation
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: python -m agents.operators_agent expect --alpha 0.58 --beta 0.39 --gamma 0.63 --alpha-phase 0.0 --beta-phase 0.10 --gamma-phase -0.20

      - name: Operators agent — sweep
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: python -m agents.operators_agent sweep --alpha 0.58 --beta 0.39 --gamma 0.63 --sweep gamma --steps 10 --out examples/operators/sweep.csv

      - name: Operators agent — spectral
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: python -m agents.operators_agent spectral --out examples/operators/spectral.json

      - name: Build single soulcode (spec)
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: python -m echo_soulcode.soulcode --spec soulcode/spec.squirrel.json --out soulcode/squirrel.json

      - name: Validate single soulcode
        if: ${{ env.RUN_PY == 'true' || github.event_name == 'workflow_dispatch' }}
        working-directory: echo-soulcode-architecture
        run: |
          python - <<'PY'
          import json
          from jsonschema import validate
          from echo_soulcode.validate import load_schema
          obj=json.load(open('soulcode/squirrel.json','r',encoding='utf-8'))
          validate(instance=obj, schema=load_schema())
          print("OK: single soulcode valid")
          PY
